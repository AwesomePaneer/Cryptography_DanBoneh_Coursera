from gmpy2 import mpz, powmod, divm

p = mpz(13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171)
g = mpz(11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568)
h = mpz(3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333)

hash_table = {}
B = mpz(2**20)
for x1 in range(0,B):
    try:
        lhs = divm(h, powmod(g, x1, p), p)
        hash_table[lhs] = x1
    except:
        print('Loop 1 error')

print("Loop 1 done")
for x0 in range(0,B):
    rhs = powmod(g,B*x0,p)
    try:
        x1 = hash_table[rhs] # returns KeyError if not found
        print("x0=",x0)
        print("x1=",x1)
        x = x0*B + x1
        print("x=",x)
        break
    except:
        pass

print('Code done')